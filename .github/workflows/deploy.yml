name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --production
    
    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
        KEY: ${{ secrets.EC2_SSH_KEY }}
        PORT: ${{ secrets.EC2_SSH_PORT }}
      run: |
        echo "$KEY" > private_key
        chmod 600 private_key
        
        # Create deployment directory on EC2 if it doesn't exist
        ssh -o StrictHostKeyChecking=no -i private_key -p ${PORT:-22} ${USERNAME}@${HOST} "sudo mkdir -p /var/www/pjn-api"
        
        # Sync files to EC2 (excluding unnecessary files)
        # First sync to temp location, then move to final location
        rsync -avz --delete \
          --exclude 'node_modules' \
          --exclude '.git' \
          --exclude '.env' \
          --exclude 'private_key' \
          --exclude '.github' \
          --exclude 'logs' \
          --exclude '*.log' \
          -e "ssh -o StrictHostKeyChecking=no -i private_key -p ${PORT:-22}" \
          ./ ${USERNAME}@${HOST}:~/pjn-api-temp/
        
        # Run deployment commands on EC2
        ssh -o StrictHostKeyChecking=no -i private_key -p ${PORT:-22} ${USERNAME}@${HOST} << 'ENDSSH'
          # Move files to correct location with sudo
          sudo rsync -av --delete ~/pjn-api-temp/ /var/www/pjn-api/
          rm -rf ~/pjn-api-temp
          
          # Use NVM paths for root user
          NPM_PATH="/root/.nvm/versions/node/v18.18.2/bin/npm"
          PM2_PATH="/root/.nvm/versions/node/v18.18.2/bin/pm2"
          NODE_PATH="/root/.nvm/versions/node/v18.18.2/bin/node"
          
          echo "üì¶ Installing dependencies..."
          sudo /bin/bash -c "cd /var/www/pjn-api && $NPM_PATH ci --production"
          
          echo "üîÑ Reloading PM2 application..."
          sudo /bin/bash -c "cd /var/www/pjn-api && $PM2_PATH reload ecosystem.config.js --env production || $PM2_PATH start ecosystem.config.js --env production"
          sudo /bin/bash -c "$PM2_PATH save"
          
          echo "üìä PM2 Status:"
          sudo /bin/bash -c "$PM2_PATH status"
          
          echo "üìã Application logs (last 20 lines):"
          sudo /bin/bash -c "$PM2_PATH logs 'pjn/api' --lines 20 --nostream" || true
          
          echo "‚úÖ Deployment completed!"
        ENDSSH
        
        # Clean up
        rm -f private_key
    
    - name: Health Check via SSH
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
        KEY: ${{ secrets.EC2_SSH_KEY }}
        SSH_PORT: ${{ secrets.EC2_SSH_PORT }}
      run: |
        echo "üîç Checking application status via SSH..."
        
        # Setup SSH key
        echo "$KEY" > private_key_health
        chmod 600 private_key_health
        
        # Check if the app is running on the server
        ssh -o StrictHostKeyChecking=no -i private_key_health -p ${SSH_PORT:-22} ${USERNAME}@${HOST} << 'ENDSSH'
          # Use NVM path for PM2
          PM2_PATH="/root/.nvm/versions/node/v18.18.2/bin/pm2"
          
          echo "üìä PM2 Status:"
          sudo /bin/bash -c "$PM2_PATH status"
          
          echo ""
          echo "üîç Checking pjn/api process:"
          PM2_OUTPUT=$(sudo /bin/bash -c "$PM2_PATH status" 2>&1)
          
          if echo "$PM2_OUTPUT" | grep -q 'pjn/api.*online'; then
            echo "‚úÖ Application is running!"
            
            echo ""
            echo "üìã Recent logs:"
            sudo /bin/bash -c "$PM2_PATH logs 'pjn/api' --lines 10 --nostream" || true
            
            exit 0
          else
            echo "‚ùå Application is not running or not in 'online' status"
            
            echo ""
            echo "üìã Error logs:"
            sudo /bin/bash -c "$PM2_PATH logs 'pjn/api' --lines 20 --nostream" || true
            
            exit 1
          fi
        ENDSSH
        
        # Clean up
        rm -f private_key_health