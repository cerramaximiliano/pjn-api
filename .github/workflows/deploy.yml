name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --production
    
    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
        KEY: ${{ secrets.EC2_SSH_KEY }}
        PORT: ${{ secrets.EC2_SSH_PORT }}
      run: |
        echo "$KEY" > private_key
        chmod 600 private_key
        
        # Create deployment directory on EC2 if it doesn't exist
        ssh -o StrictHostKeyChecking=no -i private_key -p ${PORT:-22} ${USERNAME}@${HOST} "mkdir -p ~/pjn-api"
        
        # Sync files to EC2 (excluding unnecessary files)
        rsync -avz --delete \
          --exclude 'node_modules' \
          --exclude '.git' \
          --exclude '.env' \
          --exclude 'private_key' \
          --exclude '.github' \
          --exclude 'logs' \
          --exclude '*.log' \
          -e "ssh -o StrictHostKeyChecking=no -i private_key -p ${PORT:-22}" \
          ./ ${USERNAME}@${HOST}:~/pjn-api/
        
        # Run deployment commands on EC2
        ssh -o StrictHostKeyChecking=no -i private_key -p ${PORT:-22} ${USERNAME}@${HOST} << 'ENDSSH'
          cd ~/pjn-api
          
          # Check if Node.js is installed
          if ! command -v node &> /dev/null; then
            echo "❌ Error: Node.js is not installed on this server!"
            echo ""
            echo "Please install Node.js first by running these commands on your EC2 server:"
            echo ""
            echo "curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -"
            echo "sudo apt-get install -y nodejs"
            echo "sudo npm install -g pm2"
            echo ""
            echo "Or run the setup script:"
            echo "bash ~/pjn-api/scripts/setup-ec2.sh"
            exit 1
          fi
          
          # Install dependencies
          npm ci --production
          
          # Check for PM2 and install if needed
          if ! command -v pm2 &> /dev/null && ! sudo -n command -v pm2 &> /dev/null 2>&1; then
            echo "PM2 not found, installing..."
            sudo npm install -g pm2
          fi
          
          # Reload PM2 with the ecosystem config
          if command -v pm2 &> /dev/null; then
            pm2 reload ecosystem.config.js --env production
            pm2 save
            pm2 status
          else
            sudo pm2 reload ecosystem.config.js --env production
            sudo pm2 save
            sudo pm2 status
          fi
        ENDSSH
        
        # Clean up
        rm -f private_key
    
    - name: Health Check
      env:
        HOST: ${{ secrets.EC2_HOST }}
        APP_PORT: ${{ secrets.APP_PORT }}
      run: |
        echo "Waiting for application to start..."
        sleep 10
        
        # Check if the API is responding
        MAX_ATTEMPTS=30
        ATTEMPT=0
        
        while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
          if curl -f -s -o /dev/null "http://${HOST}:${APP_PORT:-8083}/api/test" || curl -f -s -o /dev/null "http://${HOST}:${APP_PORT:-8083}/api/causas/test"; then
            echo "✅ Application is running successfully!"
            exit 0
          fi
          
          ATTEMPT=$((ATTEMPT + 1))
          echo "Attempt $ATTEMPT/$MAX_ATTEMPTS - Application not ready yet..."
          sleep 2
        done
        
        echo "❌ Application failed to start or respond"
        exit 1