name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --production
    
    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
        KEY: ${{ secrets.EC2_SSH_KEY }}
        PORT: ${{ secrets.EC2_SSH_PORT }}
      run: |
        echo "$KEY" > private_key
        chmod 600 private_key
        
        # Run deployment commands on EC2
        ssh -o StrictHostKeyChecking=no -i private_key -p ${PORT:-22} ${USERNAME}@${HOST} << 'ENDSSH'
          # Check if repository exists
          if [ ! -d "/var/www/pjn-api/.git" ]; then
            echo "üîß Repository not found, cloning..."
            sudo rm -rf /var/www/pjn-api
            sudo mkdir -p /var/www
            cd /var/www
            sudo git clone https://github.com/cerramaximiliano/pjn-api.git
          fi
          
          # Navigate to project directory
          cd /var/www/pjn-api
          
          # Ensure we're on the main branch and pull latest changes
          echo "üì• Pulling latest changes..."
          sudo git fetch origin
          sudo git reset --hard origin/main
          sudo git clean -fd
          
          echo "üì¶ Installing dependencies..."
          sudo su - root -c "export PATH=/root/.nvm/versions/node/v20.19.0/bin:\$PATH && cd /var/www/pjn-api && npm ci --production"

          echo "üîç Verifying PM2 installation..."
          sudo su - root -c "export PATH=/root/.nvm/versions/node/v20.19.0/bin:\$PATH && which pm2 && pm2 --version" || {
            echo "‚ö†Ô∏è  PM2 not found, installing..."
            sudo su - root -c "export PATH=/root/.nvm/versions/node/v20.19.0/bin:\$PATH && npm install -g pm2"
          }

          echo "üîÑ Reloading PM2 application..."
          sudo su - root -c "export PATH=/root/.nvm/versions/node/v20.19.0/bin:\$PATH && cd /var/www/pjn-api && pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production"
          sudo su - root -c "export PATH=/root/.nvm/versions/node/v20.19.0/bin:\$PATH && pm2 save"

          echo "üìä PM2 Status:"
          sudo su - root -c "export PATH=/root/.nvm/versions/node/v20.19.0/bin:\$PATH && pm2 status"

          echo "üìã Application logs (last 20 lines):"
          sudo su - root -c "export PATH=/root/.nvm/versions/node/v20.19.0/bin:\$PATH && pm2 logs 'pjn/api' --lines 20 --nostream" || true
          
          echo "‚úÖ Deployment completed!"
        ENDSSH
        
        # Clean up
        rm -f private_key
    
    - name: Health Check via SSH
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
        KEY: ${{ secrets.EC2_SSH_KEY }}
        SSH_PORT: ${{ secrets.EC2_SSH_PORT }}
      run: |
        echo "üîç Checking application status via SSH..."
        
        # Setup SSH key
        echo "$KEY" > private_key_health
        chmod 600 private_key_health
        
        # Check if the app is running on the server
        ssh -o StrictHostKeyChecking=no -i private_key_health -p ${SSH_PORT:-22} ${USERNAME}@${HOST} << 'ENDSSH'
          # Define PM2 command with full path
          PM2_CMD="export PATH=/root/.nvm/versions/node/v20.19.0/bin:\$PATH && pm2"

          echo "üìä PM2 Status:"
          sudo su - root -c "$PM2_CMD status" || {
            echo "‚ö†Ô∏è  PM2 command not found, trying alternative path..."
            sudo su - root -c "source /root/.nvm/nvm.sh && pm2 status" || {
              echo "‚ùå PM2 not found in expected locations"
              exit 1
            }
            PM2_CMD="source /root/.nvm/nvm.sh && pm2"
          }

          echo ""
          echo "üîç Checking pjn/api process:"
          PM2_OUTPUT=$(sudo su - root -c "$PM2_CMD status" 2>&1)

          if echo "$PM2_OUTPUT" | grep -q 'pjn/api.*online'; then
            echo "‚úÖ Application is running!"

            echo ""
            echo "üìã Recent logs:"
            sudo su - root -c "$PM2_CMD logs 'pjn/api' --lines 10 --nostream" || true

            exit 0
          else
            echo "‚ùå Application is not running or not in 'online' status"

            echo ""
            echo "üìã Error logs:"
            sudo su - root -c "$PM2_CMD logs 'pjn/api' --lines 20 --nostream" || true

            exit 1
          fi
        ENDSSH
        
        # Clean up
        rm -f private_key_health